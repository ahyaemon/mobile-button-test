{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","s","setS","divRef","useCallback","target","addEventListener","e","preventDefault","passive","className","href","id","onTouchStart","onContextMenu","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NA4DeA,MAzDf,WAAgB,IAAD,EACOC,mBAAS,IADhB,mBACJC,EADI,KACDC,EADC,KAELC,EAASC,uBAAY,SAACC,GACxBA,EAAOC,iBAAiB,cAAc,SAACC,GACnCA,EAAEC,iBACFN,EAAK,OACN,CAAEO,SAAS,MACf,IACH,OACI,sBAAKC,UAAU,MAAf,UACI,uDACA,mBAAGC,KAAK,qDAAR,kBACA,uBACA,iDAAoBV,KACpB,qBACIW,GAAG,UACHF,UAAU,SACVG,aAAc,WACVX,EAAK,QAGb,qBACIU,GAAG,UACHF,UAAU,SACVG,aAAc,SAACN,GACXA,EAAEC,iBACFN,EAAK,QAGb,qBACIU,GAAG,UACHF,UAAU,SACVG,aAAc,SAACN,GACXA,EAAEC,iBACFN,EAAK,QAGb,qBACIU,GAAG,UACHF,UAAU,SACVG,aAAc,SAACN,GACXA,EAAEC,iBACFN,EAAK,MAETY,cAAe,SAACP,GACZA,EAAEC,oBAGV,qBACII,GAAG,UACHF,UAAU,SACVK,IAAKZ,QCxCNa,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.b39d7ff0.chunk.js","sourcesContent":["import React, {useCallback, useRef, useState} from 'react';\nimport './App.css';\n\nfunction App() {\n    const [s, setS] = useState('')\n    const divRef = useCallback((target) => {\n        target.addEventListener('touchstart', (e: any) => {\n            e.preventDefault()\n            setS('5')\n        }, { passive: false })\n    }, [])\n    return (\n        <div className=\"App\">\n            <h1>mobile button test: 1</h1>\n            <a href=\"https://ahyaemon.github.io/mobile-button-test/test\">test</a>\n            <hr/>\n            <p>pressed button: {s}</p>\n            <div\n                id=\"button1\"\n                className=\"button\"\n                onTouchStart={() => {\n                    setS('1')\n                }}\n            ></div>\n            <div\n                id=\"button2\"\n                className=\"button\"\n                onTouchStart={(e) => {\n                    e.preventDefault()\n                    setS('2')\n                }}\n            ></div>\n            <div\n                id=\"button3\"\n                className=\"button\"\n                onTouchStart={(e) => {\n                    e.preventDefault()\n                    setS('3')\n                }}\n            ></div>\n            <div\n                id=\"button4\"\n                className=\"button\"\n                onTouchStart={(e) => {\n                    e.preventDefault()\n                    setS('4')\n                }}\n                onContextMenu={(e) => {\n                    e.preventDefault()\n                }}\n            ></div>\n            <div\n                id=\"button5\"\n                className=\"button\"\n                ref={divRef}\n            ></div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}