{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","s","setS","className","onClick","e","preventDefault","onTouchStart","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAkCeA,MA/Bf,WAAgB,IAAD,EACOC,mBAAS,IADhB,mBACJC,EADI,KACDC,EADC,KAEP,OACA,sBAAKC,UAAU,MAAf,UACI,oDACA,uBACA,iDAAoBF,KACpB,qBAAKE,UAAU,SACXC,QAAS,WAAQF,EAAK,QAE1B,qBAAKC,UAAU,SACXC,QAAS,SAACC,GACNA,EAAEC,iBACFJ,EAAK,QAGb,qBAAKC,UAAU,SACXI,aAAc,WACVL,EAAK,QAGb,qBAAKC,UAAU,SACXI,aAAc,SAACF,GACXA,EAAEC,iBACFJ,EAAK,YCbVM,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.cb471803.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\nfunction App() {\n    const [s, setS] = useState('')\n        return (\n        <div className=\"App\">\n            <h1>mobile button test</h1>\n            <hr/>\n            <p>pressed button: {s}</p>\n            <div className=\"button\"\n                onClick={() => { setS('1') }}\n            ></div>\n            <div className=\"button\"\n                onClick={(e) => {\n                    e.preventDefault()\n                    setS('2')\n                }}\n            ></div>\n            <div className=\"button\"\n                onTouchStart={() => {\n                    setS('3')\n                }}\n            ></div>\n            <div className=\"button\"\n                onTouchStart={(e) => {\n                    e.preventDefault()\n                    setS('4')\n                }}\n            ></div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}